# Generated by Django 5.1.7 on 2025-04-11 10:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PortfolioImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='portfolio/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Caption')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Portfolio Image',
                'verbose_name_plural': 'Portfolio Images',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('completed_date', models.DateField(blank=True, null=True, verbose_name='Completion Date')),
                ('client_name', models.CharField(blank=True, max_length=100, verbose_name='Client Name')),
                ('url', models.URLField(blank=True, verbose_name='Project URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Portfolio Project',
                'verbose_name_plural': 'Portfolio Projects',
                'ordering': ['-completed_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], verbose_name='Rating')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('client', 'Client'), ('freelancer', 'Freelancer')], default='client', max_length=10, verbose_name='User Type')),
                ('bio', models.TextField(blank=True, verbose_name='Biography')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Avatar')),
                ('phone_number', models.CharField(blank=True, max_length=15, verbose_name='Phone Number')),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('ru', 'Russian'), ('kk', 'Kazakh')], default='en', max_length=2, verbose_name='Preferred Language')),
                ('dark_mode', models.BooleanField(default=False, verbose_name='Dark Mode')),
                ('skills', models.TextField(blank=True, verbose_name='Skills')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Hourly Rate')),
                ('company_name', models.CharField(blank=True, max_length=100, verbose_name='Company Name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_website', models.URLField(blank=True, verbose_name='Company Website')),
                ('industry', models.CharField(blank=True, max_length=100, verbose_name='Industry')),
                ('company_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Company Size (employees)')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreelancerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portfolio_website', models.URLField(blank=True, verbose_name='Portfolio Website')),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Rating')),
                ('is_available', models.BooleanField(default=True, verbose_name='Available for Hire')),
                ('experience_years', models.PositiveIntegerField(default=0, verbose_name='Years of Experience')),
                ('education', models.TextField(blank=True, verbose_name='Education')),
                ('certifications', models.TextField(blank=True, verbose_name='Certifications')),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/', verbose_name='Resume/CV')),
                ('specialization', models.CharField(blank=True, max_length=100, verbose_name='Specialization')),
                ('languages', models.CharField(blank=True, help_text='Languages you speak (comma separated)', max_length=200, verbose_name='Languages')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='freelancer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
