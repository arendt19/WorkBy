from typing import Any, Dict, Generic, Iterator, List, Optional, Tuple, TypeVar, Union, overload

_T = TypeVar('_T')
_M = TypeVar('_M')

class Aggregate:
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

def Avg(expression: Any) -> Aggregate: ...
def Count(expression: Any, distinct: bool = False) -> Aggregate: ...
def Max(expression: Any) -> Aggregate: ...
def Min(expression: Any) -> Aggregate: ...
def Sum(expression: Any) -> Aggregate: ... 